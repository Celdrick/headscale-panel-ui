# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
  
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        # cache: 'npm'

    - name: Install dependencies and build
      run: |
        npm install
        # npm fund
        # npm audit fix --force
        npm run build:prod

    

    - name: Create zip archive of dist folder
      id: zip
      run: |
        cd dist
        zip -r ../headscale-panel-ui.zip .  # 假设需要将dist文件夹内容压缩为headscale-panel-ui.zip
        ls

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      # if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -sL https://git.io/cowtransfer | sh
        ./cowtransfer-uploader --block 2621440 -s -p 64 --no-progress ./headscale-panel-ui-${{ env.date }}-${{ matrix.node-version }}.zip 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: 上传至artifact
      uses: actions/upload-artifact@main
      # if: steps.zip.outputs.status == 'success'
      with:
        name: ${{ matrix.node-version }}-headscale-panel-ui
        path: headscale-panel-ui.zip
